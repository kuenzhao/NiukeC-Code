/*****************************************************************************************************
题目描述
	密码是我们生活中非常重要的东东，我们的那么一点不能说的秘密就全靠它了。哇哈哈.接下来渊子要在密码之上再加
一套密码，虽然简单但也安全。假设渊子原来一个BBS上的密码为zvbo9441987, 为了方便记忆，他通过一种算法把这个
密码变换成YUANzhi1987，这个密码是他的名字和出生年份，怎么忘都忘不了，而且可以明目张胆地放在显眼的地方而
不被别人知道真正的密码。
	他是这么变换的，大家都知道手机上的字母： 1--1， abc--2, def--3, ghi--4, jkl--5, 
mno--6, pqrs--7, tuv--8 wxyz--9, 0--0, 就这么简单，渊子把密码中出现的小写字母都变成对应的数字，数字和其
他的符号都不做变换，声明：密码中没有空格，而密码中出现的大写字母则变成小写之后往后移一位，如：X，先变成
小写，再往后移一位，不就是y了嘛，简单吧。记住，z往后移是a哦。

输入描述 :
输入包括多个测试数据。输入是一个明文，密码长度不超过100个字符，输入直到文件结尾
输出描述 :
输出渊子真正的密文
示例1
输入
YUANzhi1987
输出
zvbo9441987
*****************************************************************************************************/
/****************************************************************************************************
解题思路：
1.根据输入的字符串，判断每一个字符，如果是大写字母，进行大写字母的处理，如果是小写字母进行小写字母的
处理。其他字符不做处理。
2大写字符的处理：判断如果是大写字母，则当前字符等于大写字符减去31，如果为Z则直接返回a
3小写字母的处理：判断如果是小写字母，判断当前字母属于哪一个数字，直接返回改数字的字符
*****************************************************************************************************/
#include<iostream>
#include<string>
using namespace std;
//大写字符转换，则当前字符等于大写字符减去31，如果为Z则直接返回a
char upperLetterTran(char ch)
{
	if (ch == 'Z')
	{
		return ch + 7;
	}
	return ch + 33;
}
//小写字符的转换，判断如果是小写字母，判断当前字母属于哪一个数字，直接返回改数字的字符
char lowerLetterTran(char ch)
{
	if (ch == 'a' || ch == 'b' || ch == 'c')
	{
		return '2';
	}
	else if (ch == 'd' || ch == 'e' || ch == 'f')
	{
		return '3';
	}
	else if (ch == 'g' || ch == 'h' || ch == 'i')
	{
		return '4';
	}
	else if (ch == 'j' || ch == 'k' || ch == 'l')
	{
		return '5';
	}
	else if (ch == 'm' || ch == 'n' || ch == 'o')
	{
		return '6';
	}
	else if (ch == 'p' || ch == 'q' || ch == 'r' || ch == 's')
	{
		return '7';
	}
	else if (ch == 't' || ch == 'u' || ch == 'v')
	{
		return '8';
	}
	else if (ch == 'w' || ch == 'x' || ch == 'y'|| ch == 'z')
	{
		return '9';
	}
}

string translate(string str)
{
	string::iterator it;
	for (it = str.begin(); it != str.end(); it++)
	{
		if (*it >= 'A' && *it <= 'Z')
		{
			*it = upperLetterTran(*it);
		}
		else if (*it >= 'a' && *it <= 'z')
		{
			*it = lowerLetterTran(*it);
		}
	}
	return str;
}
int main()
{
	string str;
	while (cin >> str)
	{
		cout << translate(str) << endl;
	}
	return 0;
}